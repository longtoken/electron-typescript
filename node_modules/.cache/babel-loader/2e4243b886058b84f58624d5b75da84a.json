{"ast":null,"code":"import { FETCH_RENDER_CONTENT_SUCCESS, ACTIVE_SELECT, ADD_SELECT_LIST, FETCH_SELECT_LIST_BEGIN, FETCH_SELECT_LIST_FAILURE, FETCH_SELECT_LIST_SUCCESS } from '../actionType';\n//import {ActionCreator, AnyAction} from 'redux';\n//import {ThunkAction, ThunkDispatch} from 'redux-thunk';\n//export type Thunk = ThunkAction<void, AppState, null, AppAction>;\n//export type Dispatch<S> = ThunkDispatch<S, null, AppAction>;\nvar initSelect = [];\nexport var addSelectAction = function addSelectAction(value) {\n  initSelect.unshift({\n    id: initSelect.length++,\n    text: value\n  });\n  return {\n    type: ADD_SELECT_LIST,\n    selectList: initSelect\n  };\n};\nvar data = [{\n  key: 1,\n  account: '15898987777',\n  env: 'ci',\n  token: 'New York No. 1 Lake Park',\n  description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n}];\nvar contentList = [];\nexport var renderContent = function renderContent(data, phone, env) {\n  console.log(contentList, 'aaaaaa');\n  contentList = [{\n    key: contentList.length++,\n    account: phone,\n    env: env,\n    token: data.access_token,\n    description: data.access_token\n  }];\n  /*为什么用push会多一个empty\n  contentList.push({\n    key: contentList.length++,\n    account: phone,\n    env,\n    token: data.access_token,\n    description: data.access_token\n  });*/\n\n  console.log(contentList, 'axios=====');\n  return {\n    type: FETCH_RENDER_CONTENT_SUCCESS,\n    json: contentList\n  };\n};\nexport function addSelectList(value) {\n  return function (dispatch) {\n    dispatch(setActiveSelect(value));\n    dispatch(addSelectAction(value));\n  };\n} // mock\n\nvar tokenList = {\n  \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmZjgwODA4MTY5NGNjNGMyMDE2YTBmMWFiMDM3MDAyMSIsImV4cCI6MTU1NTM1NzI2NCwidXNlcl9uYW1lIjoiMTM2Nzc3Nzc3NzMiLCJqdGkiOiI2MzEwMTNkOS0wZDRiLTQzMDQtODBkZi05NTIzN2IzMWJiYTUiLCJjbGllbnRfaWQiOiJhcHBfY29yZSIsInNjb3BlIjpbImFsbCJdfQ.VQDGAHP95DQ8Usmm7THBwIKmbR2onM-ewv2ns2_996JnIl9puCYITe2gwJd3ajdaWTL-IaN0dwmkcEI5Yarj6egDGmH1ZTb-ElR2I1zreO5hWgAjMmYvdERmerLI5Z27TEVUV6WXlTkS4GDoACU9Utv8b_E5NkX0KzjfZJIdlZs\",\n  \"token_type\": \"bearer\",\n  \"refresh_token\": \"631013d9-0d4b-4304-80df-95237b31bba5\",\n  \"expires_in\": 35999,\n  \"scope\": \"all\"\n};\nexport function getContentList(phone, environment) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        dispatch(renderContent(tokenList, phone, environment));\n      }, 100);\n    });\n  };\n}\n/*export function getContentList(phone, environment) {\n  return dispatch => {\n    if (environment !== 'pro') {\n      environment = `-${environment}`;\n    }\n    let url = `https://passport${environment}.crfchina.com/auth_server/client/simplelogin`;\n    let data = {\n      'accountName': phone,\n    };\n    let Authorization = environment ? 'Basic YXBwX2NvcmU6YXBwX2NvcmU=' : 'Basic YXBwX2NvcmU6UkxDTkhYdGZFaThOaG9HSw==';\n    let config = {\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': Authorization\n      }\n    };\n    axios.post(url, data, config)\n      .then((response) => {\n        dispatch(renderContent(response, phone, environment));\n        console.log(response);\n      })\n      .catch((error) => {\n\n        console.log(error);\n      });\n  };\n}*/\n\n/*export const fetchSelectList: ActionCreator<\n    ThunkAction<Promise<any>, {}, null, AnyAction>\n    > = () => {\n  return (dispatch) => {\n    dispatch(fetchSelectListBegin());\n    return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n          dispatch(fetchSelectListSuccess(json));\n          initSelect = json;//ke\n          return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));\n  };\n}*/\n\nexport function fetchSelectList() {\n  return function (dispatch) {\n    dispatch(fetchSelectListBegin());\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        var json = [{\n          \"id\": 0,\n          \"text\": \"ci\"\n        }, {\n          \"id\": 1,\n          \"text\": \"uat\"\n        }, {\n          \"id\": 2,\n          \"text\": \"uata\"\n        }];\n        initSelect = json;\n        dispatch(setActiveSelect(json[0].text));\n        dispatch(fetchSelectListSuccess(json));\n      }, 100);\n    });\n    /*return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n            dispatch(fetchSelectListSuccess(json));\n            initSelect = json;//ke\n            return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));*/\n  };\n}\nexport var fetchSelectListBegin = function fetchSelectListBegin() {\n  return {\n    type: FETCH_SELECT_LIST_BEGIN\n  };\n};\nexport var fetchSelectListSuccess = function fetchSelectListSuccess(json) {\n  return {\n    type: FETCH_SELECT_LIST_SUCCESS,\n    selectList: json\n  };\n};\nexport var fetchSelectListFailure = function fetchSelectListFailure(error) {\n  return {\n    type: FETCH_SELECT_LIST_FAILURE,\n    error: error\n  };\n};\nexport var setActiveSelect = function setActiveSelect(value) {\n  return {\n    type: ACTIVE_SELECT,\n    value: value\n  };\n};","map":{"version":3,"sources":["/Users/qwe/Desktop/git-work/local/github/electron-typescript/src/actions/index.ts"],"names":["FETCH_RENDER_CONTENT_SUCCESS","ACTIVE_SELECT","ADD_SELECT_LIST","FETCH_SELECT_LIST_BEGIN","FETCH_SELECT_LIST_FAILURE","FETCH_SELECT_LIST_SUCCESS","initSelect","addSelectAction","value","unshift","id","length","text","type","selectList","data","key","account","env","token","description","contentList","renderContent","phone","console","log","access_token","json","addSelectList","dispatch","setActiveSelect","tokenList","getContentList","environment","Promise","resolve","reject","setTimeout","fetchSelectList","fetchSelectListBegin","fetchSelectListSuccess","fetchSelectListFailure","error"],"mappings":"AAAA,SACEA,4BADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,uBAJF,EAKEC,yBALF,EAMEC,yBANF,QAOO,eAPP;AAWA;AACA;AACA;AACA;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACxCF,EAAAA,UAAU,CAACG,OAAX,CAAmB;AAACC,IAAAA,EAAE,EAAEJ,UAAU,CAACK,MAAX,EAAL;AAA0BC,IAAAA,IAAI,EAAEJ;AAAhC,GAAnB;AACA,SAAQ;AACNK,IAAAA,IAAI,EAAEX,eADA;AAENY,IAAAA,UAAU,EAAER;AAFN,GAAR;AAID,CANM;AAQP,IAAMS,IAAI,GAAG,CACX;AACEC,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,OAAO,EAAE,aAFX;AAGEC,EAAAA,GAAG,EAAE,IAHP;AAIEC,EAAAA,KAAK,EAAE,0BAJT;AAKEC,EAAAA,WAAW,EAAE;AALf,CADW,CAAb;AASA,IAAIC,WAAW,GAAG,EAAlB;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACP,IAAD,EAAOQ,KAAP,EAAcL,GAAd,EAAsB;AACjDM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAAwB,QAAxB;AACAA,EAAAA,WAAW,GAAG,CACZ;AACEL,IAAAA,GAAG,EAAEK,WAAW,CAACV,MAAZ,EADP;AAEEM,IAAAA,OAAO,EAAEM,KAFX;AAGEL,IAAAA,GAAG,EAAHA,GAHF;AAIEC,IAAAA,KAAK,EAAEJ,IAAI,CAACW,YAJd;AAKEN,IAAAA,WAAW,EAAEL,IAAI,CAACW;AALpB,GADY,CAAd;AASA;;;;;;;;;AAQAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAAyB,YAAzB;AACA,SAAQ;AACNR,IAAAA,IAAI,EAAEb,4BADA;AAEN2B,IAAAA,IAAI,EAAEN;AAFA,GAAR;AAID,CAxBM;AA0BP,OAAO,SAASO,aAAT,CAAuBpB,KAAvB,EAA8B;AACnC,SAAO,UAAAqB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAACtB,KAAD,CAAhB,CAAR;AACAqB,IAAAA,QAAQ,CAACtB,eAAe,CAACC,KAAD,CAAhB,CAAR;AACD,GAHD;AAID,C,CAED;;AACA,IAAIuB,SAAS,GAAG;AAAC,kBAAe,qbAAhB;AAAsc,gBAAa,QAAnd;AAA4d,mBAAgB,sCAA5e;AAAmhB,gBAAa,KAAhiB;AAAsiB,WAAQ;AAA9iB,CAAhB;AACA,OAAO,SAASC,cAAT,CAAwBT,KAAxB,EAA+BU,WAA/B,EAA4C;AACjD,SAAO,UAAAJ,QAAQ,EAAI;AACjB,WAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,UAAU,CAAC,YAAM;AACfR,QAAAA,QAAQ,CAACP,aAAa,CAACS,SAAD,EAAYR,KAAZ,EAAmBU,WAAnB,CAAd,CAAR;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAJM,CAAP;AAKD,GAND;AAOD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;;;;;;AAgBA,OAAO,SAASK,eAAT,GAA2B;AAChC,SAAO,UAAAT,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACU,oBAAoB,EAArB,CAAR;AACA,WAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIV,IAAI,GAAG,CACT;AAAC,gBAAM,CAAP;AAAU,kBAAQ;AAAlB,SADS,EAET;AAAC,gBAAM,CAAP;AAAU,kBAAQ;AAAlB,SAFS,EAGT;AAAC,gBAAM,CAAP;AAAU,kBAAQ;AAAlB,SAHS,CAAX;AAKArB,QAAAA,UAAU,GAAGqB,IAAb;AACAE,QAAAA,QAAQ,CAACC,eAAe,CAACH,IAAI,CAAC,CAAD,CAAJ,CAAQf,IAAT,CAAhB,CAAR;AACAiB,QAAAA,QAAQ,CAACW,sBAAsB,CAACb,IAAD,CAAvB,CAAR;AACD,OATS,EASP,GATO,CAAV;AAUD,KAXM,CAAP;AAYA;;;;;;;;AAQD,GAtBD;AAuBD;AAED,OAAO,IAAMY,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AACzC1B,IAAAA,IAAI,EAAEV;AADmC,GAAP;AAAA,CAA7B;AAIP,OAAO,IAAMqC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAb,IAAI;AAAA,SAAK;AAC7Cd,IAAAA,IAAI,EAAER,yBADuC;AAE7CS,IAAAA,UAAU,EAAEa;AAFiC,GAAL;AAAA,CAAnC;AAKP,OAAO,IAAMc,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK;AAAA,SAAK;AAC9C7B,IAAAA,IAAI,EAAET,yBADwC;AAE9CsC,IAAAA,KAAK,EAALA;AAF8C,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMZ,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK;AAAA,SAAK;AACvCK,IAAAA,IAAI,EAAEZ,aADiC;AAEvCO,IAAAA,KAAK,EAALA;AAFuC,GAAL;AAAA,CAA7B","sourcesContent":["import {\n  FETCH_RENDER_CONTENT_SUCCESS,\n  ACTIVE_SELECT,\n  ADD_SELECT_LIST,\n  FETCH_SELECT_LIST_BEGIN,\n  FETCH_SELECT_LIST_FAILURE,\n  FETCH_SELECT_LIST_SUCCESS,\n} from '../actionType'\n\nimport axios from 'axios'\n\n//import {ActionCreator, AnyAction} from 'redux';\n//import {ThunkAction, ThunkDispatch} from 'redux-thunk';\n//export type Thunk = ThunkAction<void, AppState, null, AppAction>;\n//export type Dispatch<S> = ThunkDispatch<S, null, AppAction>;\n\nlet initSelect = [];\n\nexport const addSelectAction = (value) => {\n  initSelect.unshift({id: initSelect.length++, text: value});\n  return ({\n    type: ADD_SELECT_LIST,\n    selectList: initSelect\n  });\n};\n\nconst data = [\n  {\n    key: 1,\n    account: '15898987777',\n    env: 'ci',\n    token: 'New York No. 1 Lake Park',\n    description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n  }\n];\nlet contentList = [];\nexport const renderContent = (data, phone, env) => {\n  console.log(contentList,'aaaaaa');\n  contentList = [\n    {\n      key: contentList.length++,\n      account: phone,\n      env,\n      token: data.access_token,\n      description: data.access_token\n    }\n  ];\n  /*为什么用push会多一个empty\n  contentList.push({\n    key: contentList.length++,\n    account: phone,\n    env,\n    token: data.access_token,\n    description: data.access_token\n  });*/\n  console.log(contentList, 'axios=====');\n  return ({\n    type: FETCH_RENDER_CONTENT_SUCCESS,\n    json: contentList\n  });\n};\n\nexport function addSelectList(value) {\n  return dispatch => {\n    dispatch(setActiveSelect(value));\n    dispatch(addSelectAction(value));\n  };\n}\n\n// mock\nlet tokenList = {\"access_token\":\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmZjgwODA4MTY5NGNjNGMyMDE2YTBmMWFiMDM3MDAyMSIsImV4cCI6MTU1NTM1NzI2NCwidXNlcl9uYW1lIjoiMTM2Nzc3Nzc3NzMiLCJqdGkiOiI2MzEwMTNkOS0wZDRiLTQzMDQtODBkZi05NTIzN2IzMWJiYTUiLCJjbGllbnRfaWQiOiJhcHBfY29yZSIsInNjb3BlIjpbImFsbCJdfQ.VQDGAHP95DQ8Usmm7THBwIKmbR2onM-ewv2ns2_996JnIl9puCYITe2gwJd3ajdaWTL-IaN0dwmkcEI5Yarj6egDGmH1ZTb-ElR2I1zreO5hWgAjMmYvdERmerLI5Z27TEVUV6WXlTkS4GDoACU9Utv8b_E5NkX0KzjfZJIdlZs\",\"token_type\":\"bearer\",\"refresh_token\":\"631013d9-0d4b-4304-80df-95237b31bba5\",\"expires_in\":35999,\"scope\":\"all\"};\nexport function getContentList(phone, environment) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        dispatch(renderContent(tokenList, phone, environment));\n      }, 100);\n    });\n  };\n}\n/*export function getContentList(phone, environment) {\n  return dispatch => {\n    if (environment !== 'pro') {\n      environment = `-${environment}`;\n    }\n    let url = `https://passport${environment}.crfchina.com/auth_server/client/simplelogin`;\n    let data = {\n      'accountName': phone,\n    };\n    let Authorization = environment ? 'Basic YXBwX2NvcmU6YXBwX2NvcmU=' : 'Basic YXBwX2NvcmU6UkxDTkhYdGZFaThOaG9HSw==';\n    let config = {\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': Authorization\n      }\n    };\n    axios.post(url, data, config)\n      .then((response) => {\n        dispatch(renderContent(response, phone, environment));\n        console.log(response);\n      })\n      .catch((error) => {\n\n        console.log(error);\n      });\n  };\n}*/\n\n\n/*export const fetchSelectList: ActionCreator<\n    ThunkAction<Promise<any>, {}, null, AnyAction>\n    > = () => {\n  return (dispatch) => {\n    dispatch(fetchSelectListBegin());\n    return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n          dispatch(fetchSelectListSuccess(json));\n          initSelect = json;//ke\n          return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));\n  };\n}*/\n\nexport function fetchSelectList() {\n  return dispatch => {\n    dispatch(fetchSelectListBegin());\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let json = [\n          {\"id\": 0, \"text\": \"ci\"},\n          {\"id\": 1, \"text\": \"uat\"},\n          {\"id\": 2, \"text\": \"uata\"}\n        ];\n        initSelect = json;\n        dispatch(setActiveSelect(json[0].text));\n        dispatch(fetchSelectListSuccess(json));\n      }, 100);\n    });\n    /*return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n            dispatch(fetchSelectListSuccess(json));\n            initSelect = json;//ke\n            return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));*/\n  };\n}\n\nexport const fetchSelectListBegin = () => ({\n  type: FETCH_SELECT_LIST_BEGIN\n});\n\nexport const fetchSelectListSuccess = json => ({\n  type: FETCH_SELECT_LIST_SUCCESS,\n  selectList: json\n});\n\nexport const fetchSelectListFailure = error => ({\n  type: FETCH_SELECT_LIST_FAILURE,\n  error\n});\n\nexport const setActiveSelect = value => ({\n  type: ACTIVE_SELECT,\n  value\n});\n\n"]},"metadata":{},"sourceType":"module"}