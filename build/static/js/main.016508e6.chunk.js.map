{"version":3,"sources":["actionType/index.ts","reducers/selectList.ts","reducers/contentList.ts","reducers/index.js","component/Placeholder/index.tsx","component/Picker/index.tsx","component/ContentList/index.tsx","actions/index.ts","containers/App.tsx","serviceWorker.ts","utils/axios.ts","index.tsx"],"names":["ADD_SELECT_LIST","ACTIVE_SELECT","DELETE_CONTENT","FETCH_RENDER_CONTENT_SUCCESS","FETCH_SELECT_LIST_BEGIN","FETCH_SELECT_LIST_SUCCESS","FETCH_SELECT_LIST_FAILURE","initialState","items","loading","error","list","combineReducers","allData","state","arguments","length","undefined","action","type","Object","objectSpread","activeSelect","value","selectList","contentData","json","console","log","Placeholder","react_default","a","createElement","className","Option","Select","Picker","_this$props","this","props","onChange","options","select_default","onSelect","map","item","key","id","text","React","Component","links","name","link","ContentList","token","forEach","concat","href","_this","data","columns","JSON","stringify","table_default","expandedRowRender","record","style","margin","getLinks","description","renderList","bind","dataSource","initSelect","addSelectAction","unshift","contentList","renderContent","phone","env","cpContentList","parse","account","access_token","del","push","i","splice","tokenList","token_type","refresh_token","expires_in","scope","fetchSelectListBegin","fetchSelectListSuccess","setActiveSelect","content","e","Base64","atob","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","visible","title","dataIndex","render","popover_default","trigger","placement","button_default","onClick","deleteItem","assertThisInitialized","InputValue","InputPhone","addSelectList","dispatch","setState","handleVisibleChange","InputPhoneChange","target","InputChange","handleChange","submit","deleteContentItem","Promise","resolve","reject","setTimeout","environment","message","info","input_default","placeholder","maxLength","allowClear","src_component_Placeholder","src_component_Picker","onVisibleChange","icon_default","fontSize","src_component_ContentList","connect","Boolean","window","location","hostname","match","axios","create","defaults","timeout","interceptors","request","use","config","withCredentials","response","_","err","noneIntercept","_err$response","status","noneIntercept400","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.016508e6.chunk.js","sourcesContent":["export const ADD_SELECT_LIST = 'ADD_SELECT_LIST';\n\nexport const ACTIVE_SELECT = 'ACTIVE_SELECT';\n\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\n\nexport const FETCH_RENDER_CONTENT_SUCCESS = 'FETCH_RENDER_CONTENT_SUCCESS';\n\nexport const FETCH_SELECT_LIST_BEGIN   = 'FETCH_SELECT_LIST_BEGIN';\nexport const FETCH_SELECT_LIST_SUCCESS = 'FETCH_SELECT_LIST_SUCCESS';\nexport const FETCH_SELECT_LIST_FAILURE = 'FETCH_SELECT_LIST_FAILURE';\n\n","import {\n    ACTIVE_SELECT,\n    ADD_SELECT_LIST,\n    FETCH_SELECT_LIST_BEGIN,\n    FETCH_SELECT_LIST_SUCCESS,\n    FETCH_SELECT_LIST_FAILURE,\n} from '../actionType'\n\n\nconst initialState = {\n    items: [],\n    loading: false,\n    error: null\n};\n\nexport default function selectList(state = initialState, action) {\n    switch(action.type) {\n        case ACTIVE_SELECT:\n            return {\n                ...state,\n                activeSelect: action.value\n            };\n        case ADD_SELECT_LIST:\n            return {\n                ...state,\n                loading: false,\n                items: action.selectList\n            };\n        case FETCH_SELECT_LIST_BEGIN:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            };\n        case FETCH_SELECT_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                items: action.selectList\n            };\n        case FETCH_SELECT_LIST_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n                items: []\n            };\n\n        default:\n            return state;\n    }\n}\n","import {\n  DELETE_CONTENT,\n  FETCH_RENDER_CONTENT_SUCCESS,\n} from '../actionType'\n\n\nconst initialState = {\n  list: [],\n  loading: false,\n  error: null\n};\n\nexport default function contentList(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_RENDER_CONTENT_SUCCESS:\n      return {\n        ...state,\n        list: action.json\n      };\n    case DELETE_CONTENT:\n      console.log(action.json);\n      return {\n        ...state,\n        list: action.json\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport selectList from './selectList'\nimport contentList from './contentList'\n\nexport default combineReducers({\n  allData: selectList,\n  contentData: contentList,\n})\n","\nimport React from \"react\";\nimport './index.css';\n\nconst Placeholder = () => {\n    return <div className=\"placeholder\"></div>\n}\n\nexport default Placeholder;","import React from \"react\";\nimport './index.css';\n\nimport Select from 'antd/lib/select';\n\nconst Option = Select.Option;\n\ninterface PickerProps {\n  onChange: (e: any) => void;\n  value: string;\n  options: any[];\n}\n\n//onChange={(e:HTMLElementEvent<HTMLSelectElement>) => onChange(e.target.value)}\nclass Picker extends React.Component<PickerProps> {\n  onSelect(value) {\n    console.log(value)\n  }\n\n  render() {\n    let {onChange, options, value} = this.props;\n\n    console.log(options, '---options Picker', options[0], value);\n    return (\n      <Select\n        onChange={(value: string) => onChange(value)}\n        //defaultValue={value}\n        value={value}\n        onSelect={this.onSelect}\n      >\n        {options && options.length && options.map((item: any) =>\n          <Option key={item.id} value={item.text}>{item.text}</Option>\n        )}\n      </Select>\n    );\n  }\n}\n\nexport default Picker;\n","import React from \"react\";\nimport './index.css';\n\nimport Table from 'antd/lib/table';\nimport Popover from 'antd/lib/popover';\nimport Button from 'antd/lib/button';\nimport message from 'antd/lib/message';\n\n\n\ninterface Props {\n  data: any[];\n  columns: any[];\n}\n\nconst links = [\n  {key:0, name: '分期借款', link:'https://apply-static-uat.crfchina.com/xfd_shop_mpa/static/index.html'},\n  {key:1, name: '商城首页', link:'https://apply-static-uat.crfchina.com/xfd_shop_mpa/static/index.html'},\n  {key:2, name: '认证中心', link:'https://apply-static-uat.crfchina.com/xfd_shop_mpa/static/index.html'},\n  {key:3, name: '个人中心', link:'https://apply-static-uat.crfchina.com/xfd_shop_mpa/static/index.html'},\n];\n\nclass ContentList extends React.Component<Props> {\n\n  getLinks(token) {\n    links.forEach((item) => {\n      item.link = `${item.link}?access_token=${token}`;\n    });\n    return links;\n  }\n\n  renderList(item) {\n    return <p className=\"content-link\" key={item.key}>\n      <a href={item.link}>{item.name}</a>\n    </p>\n  }\n\n  render() {\n    let {data, columns} = this.props;\n    console.log(JSON.stringify(data),data, '-----====+++++ 更新');\n    return (\n      <section className=\"content-list\">\n        <Table\n          columns={columns}\n          expandedRowRender={record => <div style={{margin: 0}}>\n            { this.getLinks(record.description).map(this.renderList.bind(this)) }\n          </div>}\n          dataSource={data}\n        />\n      </section>\n    );\n  }\n}\n\nexport default ContentList;\n","import {\n  FETCH_RENDER_CONTENT_SUCCESS,\n  DELETE_CONTENT,\n  ACTIVE_SELECT,\n  ADD_SELECT_LIST,\n  FETCH_SELECT_LIST_BEGIN,\n  FETCH_SELECT_LIST_FAILURE,\n  FETCH_SELECT_LIST_SUCCESS,\n} from '../actionType'\n\nimport axios from 'axios'\n\n//import {ActionCreator, AnyAction} from 'redux';\n//import {ThunkAction, ThunkDispatch} from 'redux-thunk';\n//export type Thunk = ThunkAction<void, AppState, null, AppAction>;\n//export type Dispatch<S> = ThunkDispatch<S, null, AppAction>;\n\nlet initSelect = [];\n\nexport const addSelectAction = (value) => {\n  initSelect.unshift({id: initSelect.length++, text: value});\n  return ({\n    type: ADD_SELECT_LIST,\n    selectList: initSelect\n  });\n};\n\nconst data = [\n  {\n    key: 1,\n    account: '15898987777',\n    env: 'ci',\n    token: 'New York No. 1 Lake Park',\n    description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n  }\n];\nlet contentList = [];\nexport const renderContent = (data, phone, env) => {\n  console.log(contentList, contentList.length, 'aaaaaa');\n  /*contentList = [\n    {\n      key: contentList.length++,\n      account: phone,\n      env,\n      token: data.access_token,\n      description: data.access_token\n    }\n  ];*/\n  //为什么用push会多一个empty\n  let cpContentList = JSON.parse(JSON.stringify(contentList));\n  let item = {\n    key: cpContentList.length++,\n    account: phone,\n    env,\n    token: data.access_token,\n    description: data.access_token,\n    del: phone\n  };\n\n  cpContentList.push(item);\n  contentList.push(item);\n  console.log(contentList, cpContentList, 'axios=====');\n\n  for (let i = 0; i < cpContentList.length; i++) {\n    if (!cpContentList[i]) {\n      cpContentList.splice(i, 1);\n    }\n  }\n  for (let i = 0; i < contentList.length; i++) {\n    if (!contentList[i]) {\n      contentList.splice(i, 1);\n    }\n  }\n  return ({\n    type: FETCH_RENDER_CONTENT_SUCCESS,\n    json: cpContentList\n  });\n};\n\nexport const deleteContentItem = (phone) => {\n\n  for (let i = 0; i < contentList.length; i++) {\n    if (contentList[i].account === phone) {\n      contentList.splice(i, 1);\n    }\n  }\n  console.log(phone, '----', contentList);\n  return ({\n    type: DELETE_CONTENT,\n    json: contentList\n  });\n};\n\n\nexport function addSelectList(value) {\n  return dispatch => {\n    dispatch(setActiveSelect(value));\n    dispatch(addSelectAction(value));\n  };\n}\n\n// mock\nlet tokenList = {\n  \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmZjgwODA4MTY5NGNjNGMyMDE2YTBmMWFiMDM3MDAyMSIsImV4cCI6MTU1NTM1NzI2NCwidXNlcl9uYW1lIjoiMTM2Nzc3Nzc3NzMiLCJqdGkiOiI2MzEwMTNkOS0wZDRiLTQzMDQtODBkZi05NTIzN2IzMWJiYTUiLCJjbGllbnRfaWQiOiJhcHBfY29yZSIsInNjb3BlIjpbImFsbCJdfQ.VQDGAHP95DQ8Usmm7THBwIKmbR2onM-ewv2ns2_996JnIl9puCYITe2gwJd3ajdaWTL-IaN0dwmkcEI5Yarj6egDGmH1ZTb-ElR2I1zreO5hWgAjMmYvdERmerLI5Z27TEVUV6WXlTkS4GDoACU9Utv8b_E5NkX0KzjfZJIdlZs\",\n  \"token_type\": \"bearer\",\n  \"refresh_token\": \"631013d9-0d4b-4304-80df-95237b31bba5\",\n  \"expires_in\": 35999,\n  \"scope\": \"all\"\n};\n\nexport function getContentList(phone, environment) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        dispatch(renderContent(tokenList, phone, environment));\n      }, 100);\n    });\n  };\n}\n\n/*export function getContentList(phone, environment) {\n  return dispatch => {\n    if (environment !== 'pro') {\n      environment = `-${environment}`;\n    }\n    let url = `https://passport${environment}.crfchina.com/auth_server/client/simplelogin`;\n    let data = {\n      'accountName': phone,\n    };\n    let Authorization = environment ? 'Basic YXBwX2NvcmU6YXBwX2NvcmU=' : 'Basic YXBwX2NvcmU6UkxDTkhYdGZFaThOaG9HSw==';\n    let config = {\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': Authorization\n      }\n    };\n    axios.post(url, data, config)\n      .then((response) => {\n        dispatch(renderContent(response, phone, environment));\n        console.log(response);\n      })\n      .catch((error) => {\n\n        console.log(error);\n      });\n  };\n}*/\n\n\n/*export const fetchSelectList: ActionCreator<\n    ThunkAction<Promise<any>, {}, null, AnyAction>\n    > = () => {\n  return (dispatch) => {\n    dispatch(fetchSelectListBegin());\n    return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n          dispatch(fetchSelectListSuccess(json));\n          initSelect = json;//ke\n          return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));\n  };\n}*/\n\nexport function fetchSelectList() {\n  return dispatch => {\n    dispatch(fetchSelectListBegin());\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let json = [\n          {\"id\": 0, \"text\": \"ci\"},\n          {\"id\": 1, \"text\": \"uat\"},\n          {\"id\": 2, \"text\": \"uata\"}\n        ];\n        initSelect = json;\n        dispatch(setActiveSelect(json[0].text));\n        dispatch(fetchSelectListSuccess(json));\n      }, 100);\n    });\n    /*return fetch('../mock/selectList.json')\n        .then(res => res.json())\n        .then(json => {\n            dispatch(fetchSelectListSuccess(json));\n            initSelect = json;//ke\n            return json;\n        })\n        .catch(error => dispatch(fetchSelectListFailure(error)));*/\n  };\n}\n\nexport const fetchSelectListBegin = () => ({\n  type: FETCH_SELECT_LIST_BEGIN\n});\n\nexport const fetchSelectListSuccess = json => ({\n  type: FETCH_SELECT_LIST_SUCCESS,\n  selectList: json\n});\n\nexport const fetchSelectListFailure = error => ({\n  type: FETCH_SELECT_LIST_FAILURE,\n  error\n});\n\nexport const setActiveSelect = value => ({\n  type: ACTIVE_SELECT,\n  value\n});\n\n","import React, {Component} from 'react';\nimport {Action, Dispatch, AnyAction} from 'redux';\nimport {ThunkDispatch} from 'redux-thunk';\n\nimport {connect} from 'react-redux';\nimport './App.css';\nimport Placeholder from '../component/Placeholder/index';\nimport Picker from '../component/Picker/index';\nimport ContentList from '../component/ContentList/index';\n\nimport Button from 'antd/lib/button';\nimport message from 'antd/lib/message';\nimport Input from 'antd/lib/input';\nimport Icon from 'antd/lib/icon';\nimport Popover from 'antd/lib/popover';\nimport {\n  fetchSelectList,\n  addSelectList,\n  setActiveSelect,\n  getContentList, deleteContentItem,\n} from '../actions';\n\nimport Base64 from 'Base64'\n\ntype SelectList = {\n  items: any[];\n};\n\n/*export interface Dispatch<S> {\n  <A extends Action>(action: A): A;\n}*/\n\ninterface AppProps {\n  allData: any[];\n  contentData: any[];\n  loading: boolean;\n  error: any;\n  //dispatch: Dispatch;\n  activeSelect: string;\n  dispatch: ThunkDispatch<SelectList, any, AnyAction>;\n}\n\nconst content = (e) => {\n  return (\n    <div>\n      <p className=\"wordBreak\">{Base64.atob(e)}</p>\n      <p className=\"wordBreak\">{e}</p>\n    </div>\n  );\n};\n\nclass App extends Component<AppProps> {\n  constructor(props: AppProps) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  state = {\n    visible: false,\n  }\n  columns = [\n    {title: '用户', dataIndex: 'account', key: 'account'},\n    {title: '环境', dataIndex: 'env', key: 'env'},\n    {title: 'token', dataIndex: 'token', key: 'token', render: (e) => <Popover content={content(e)} title=\"Title\" trigger=\"click\" placement=\"bottom\">\n        <Button>查看token</Button>\n      </Popover>},\n    {\n      title: 'Action', dataIndex: 'del', key: 'del', render: (e) => <Button type=\"danger\" onClick={this.deleteItem.bind(this,e)}>删除</Button>,\n    },\n  ]\n\n  InputValue: null\n  InputPhone: null\n\n  deleteItem(e) {\n    console.log('11');\n    this.props.dispatch(deleteContentItem(e))\n  }\n  componentDidMount(): void {\n    this.props.dispatch(fetchSelectList());\n  }\n\n  addSelectList = () => {\n    this.props.dispatch(addSelectList(this.InputValue));\n    this.setState({\n      visible: false,\n    });\n  }\n\n  handleVisibleChange = (visible: Boolean) => {\n    this.setState({visible});\n  }\n\n  submit() {\n    if (this.InputPhone) {\n      this.props.dispatch(getContentList(this.InputPhone, this.props.activeSelect));\n    } else {\n      message.info('请输入手机号', 2);\n    }\n  }\n\n  InputPhoneChange = e => {\n    this.InputPhone = e.target.value;\n  }\n\n  InputChange = e => {\n    this.InputValue = e.target.value;\n  }\n\n  handleChange = value => {\n    this.props.dispatch(setActiveSelect(value))\n  }\n\n  render() {\n    let {activeSelect, allData, loading, contentData} = this.props;\n    console.log(activeSelect, allData, 'render');\n    if (loading) {\n      return <div>loading...</div>\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <Input placeholder=\"请输入手机号\" maxLength={11} allowClear onChange={this.InputPhoneChange}/>\n          <Placeholder/>\n          <Picker\n            value={activeSelect}\n            onChange={this.handleChange}\n            options={allData}\n          />\n          <div className=\"add-select\">\n            <Popover\n              content={<Button className=\"customAdd\" type=\"primary\" onClick={this.addSelectList}>使用自定义环境</Button>}\n              //title={<input type=\"text\" ref={node => this.inputAdd = node}/>}\n              title={<Input allowClear onChange={this.InputChange}/>}\n              trigger=\"click\"\n              visible={this.state.visible}\n              onVisibleChange={this.handleVisibleChange}\n            >\n              <Icon type=\"plus-circle\" style={{fontSize: '20px'}}/>\n            </Popover>\n          </div>\n          <Placeholder/>\n          <Button type=\"primary\" onClick={this.submit}>提交</Button>\n        </header>\n        <ContentList\n          data={contentData}\n          columns={this.columns}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state, '---- App.tsx');\n  return ({\n    allData: state.allData.items,\n    contentData: state.contentData.list,\n    activeSelect: state.allData.activeSelect,\n    loading: state.allData.loading,\n    error: state.allData.error,\n  })\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios'\nimport message from 'antd/lib/message';\n\nexport default () => {\n  let instance = axios.create();\n  instance.defaults.timeout = 20000;\n\n  // 添加请求拦截器\n  axios.interceptors.request.use(function (config = {}) {\n    config.withCredentials = true;\n    /*\n    let headers = config.headers = config.headers || {};\n    if (config.useForm) {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      config.transformRequest = [function (data) {\n        let result = ''\n        for (let name in data) {\n          result += encodeURIComponent(name) + '=' + encodeURIComponent(data[name]) + '&'\n        }\n        return result\n      }];\n    }*/\n    return config;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n\n  // 添加响应拦截器\n  axios.interceptors.response.use(_ => _, (err) => {\n    if (err && err.response) {\n      let config = err.response.config || {};\n      if (config.noneIntercept) {\n        return Promise.reject(err);\n      }\n      const {status, data} = err.response;\n\n      switch (status) {\n        case 0:\n          message.error('系统异常！状态码：0');\n          break;\n        case 400:\n          if (data.message) {\n            if (!config.noneIntercept400) {\n              message.error(data.message, 2);\n            }\n          } else {\n            message.error('请求错误(400)');\n          }\n          break;\n        case 401:\n          message.error('请重新登录！');\n          break;\n        case 403:\n          message.error('服务器连接失败！');\n          break;\n        case 404:\n          message.error('资源已经移除！');\n          break;\n        case 500:\n          message.error('服务器错误(500)');\n          break;\n        case 501:\n          message.error('服务未实现(501)');\n          break;\n        case 502:\n          message.error('网络错误(502)');\n          break;\n        case 503:\n          message.error('我们正在对系统进行升级维护，期间由此造成的不便敬请谅解。');\n          break;\n        case 504:\n          message.error('响应超时，请稍后再试！');\n          break;\n        case 505:\n          message.error('HTTP版本不受支持(505)');\n          break;\n        default:\n          message.error(`连接出错(${err.response.status})!`);\n      }\n    } else {\n      message.error('没有响应，连接服务器失败!');\n    }\n    return Promise.reject(err);\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk, {\n    ThunkMiddleware\n} from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport reducer from './reducers'\nimport App from './containers/App'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n/*\ntype State = {\n    foo: string;\n};\ntype Actions = { type: 'FOO' } | { type: 'BAR', result: number };\nconst middleware = [thunk as ThunkMiddleware<State, Actions>];*/\nimport initAxios from './utils/axios'\ninitAxios();\n\nconst middleware = [thunk];\n// if (process.env.NODE_ENV !== 'production') {\n//   middleware.push(createLogger())\n// }\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n);\n//(store.dispatch as ThunkDispatch<Redux.Store.Definition, void, AnyAction>)( bootstrap() );\n\nReactDOM.render(<Provider store={store}>\n    <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}